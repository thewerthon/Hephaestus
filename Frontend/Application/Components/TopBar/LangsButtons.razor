<RadzenButton @ref=button Variant="Variant.Text" ContextMenu="@(args => None())" class="topbar-icon" title="Mudar Tema" Click="@(args => popup.ToggleAsync(button.Element))">
	<LordIcon Icon="/topbar/language.json" Anim="state" Trigger="click" State="hover-language" Size="24px" Target=".rz-button" Title="@AppText["0014"]" />
</RadzenButton>

<Popup @ref=popup Lazy=true class="popup-frame">

	<RadzenStack Gap="6px" class="rz-p-2">

		<RadzenButton Variant="Variant.Text" Click="@(() => SetLang("pt"))" Style="text-align:start" class="rz-px-2" title="Mudar Idioma">
			<RadzenImage Path="images/langs/br.svg" class="lang-quickbutton" />
			<RadzenText Text="Portugês (Brasileiro)" TextStyle="TextStyle.Button" class="rz-m-0 rz-ml-2" />
		</RadzenButton>

		<RadzenButton Variant="Variant.Text" Click="@(() => SetLang("en"))" Style="text-align:start" class="rz-px-2" title="Change Language">
			<RadzenImage Path="images/langs/us.svg" class="lang-quickbutton" />
			<RadzenText Text="English (International)" TextStyle="TextStyle.Button" class="rz-m-0 rz-ml-2" />
		</RadzenButton>

		<RadzenButton Variant="Variant.Text" Click="@(() => SetLang("es"))" Style="text-align:start" class="rz-px-2" title="Cambiar Idioma">
			<RadzenImage Path="images/langs/sp.svg" class="lang-quickbutton" />
			<RadzenText Text="Español (Internacional)" TextStyle="TextStyle.Button" class="rz-m-0 rz-ml-2" />
		</RadzenButton>

	</RadzenStack>

</Popup>

@code {

	RadzenButton? button;
	Popup? popup;

	private async Task SetLang(string lang) {

		var result = await DialogService.Confirm(AppText["0036"], AppText["0037"], new ConfirmOptions() {
				OkButtonText = AppButton["Confirm"],
				CancelButtonText = AppButton["Cancel"],
				AutoFocusFirstElement = false,
				CloseDialogOnOverlayClick = true,
				CloseDialogOnEsc = true
			});

		if (result ?? false) {

			await LocalStorage.RemoveItemAsync("UserInfo");
			await JSRuntime.InvokeVoidAsync("setLang", lang);
			NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);

		}

	}

	private void None() {

	}

}