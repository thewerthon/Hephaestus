<RadzenButton Variant="Variant.Text" ContextMenu=@(args => ShowContextMenu(args)) class="topbar-icon" title="Alterar Tema" Click="@(() => ToggleTheme())">
	<LordIcon Icon="/topbar/bulb.json" Anim="none" Trigger="auto" State="morph-bulb-OFF" Size="24px" Target=".rz-button" Title="@AppText["0015"]" Id="theme-icon" />
</RadzenButton>

@code {

	private async Task ToggleTheme() {
		await JSRuntime.InvokeVoidAsync("toggleTheme");
	}

	private void ShowContextMenu(MouseEventArgs args) {
		ContextMenuService.Open(args,
				new List<ContextMenuItem> {
					new ContextMenuItem(){ Text=@AppText["0016"], Value=1, Icon="brightness_4" },
					new ContextMenuItem(){ Text=@AppText["0018"], Value=2, Icon="brightness_high"},
					new ContextMenuItem(){ Text=@AppText["0020"], Value=3, Icon="mode_night" },
					}, ApplyTheme);
	}

	private void ApplyTheme(MenuItemEventArgs args) {

		switch (args.Value) {
			case 1:
				_ = JSRuntime.InvokeVoidAsync("applyTheme", "auto");
				break;

			case 2:
				_ = JSRuntime.InvokeVoidAsync("applyTheme", "light");
				break;

			case 3:
				_ = JSRuntime.InvokeVoidAsync("applyTheme", "dark");
				break;

		}

		ContextMenuService.Close();

	}

}