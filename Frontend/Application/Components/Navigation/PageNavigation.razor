@namespace Hephaestus.Frontend.Application.Components

<PageTitle>@(PageTitle ?? AppNames[Code])</PageTitle>

<RadzenColumn>
	<RadzenRow Gap="10px" RowGap="0px" AlignItems="AlignItems.Center" Style="flex-wrap: nowrap;">
		<RadzenText Text=@(Title ?? AppTitles[Code]) TextStyle="Radzen.Blazor.TextStyle.DisplayH4" class="my-2" />
		<RadzenToggleButton Icon="star_outline" ToggleIcon="star" Variant="Variant.Text" Value="favorited" Visible="Favoritable" Change="@OnFavoriteToggleAsync" Size="ButtonSize.Small" Style="min-width: 32px; min-height: 32px" class="rounded-circle" title="@(!favorited ? AppTexts["0069"] : AppTexts["0070"])" />
	</RadzenRow>
	<RadzenText Text=@(Subtitle ?? AppTexts["0055"]) TextStyle="Radzen.Blazor.TextStyle.DisplayH5" class="mt-0" />
</RadzenColumn>

<RadzenStack Orientation="Orientation.Horizontal" Wrap="FlexWrap.Wrap" Gap="20px" class="rz-pt-4 rz-pb-12">

	<UpdateChecker CheckUpdates="true" DisplayBanner="true" BlockNavigation="true" />

	@ChildContent

</RadzenStack>

@code {

	[Parameter, EditorRequired]
	public string Code { get; set; } = default!;

	[Parameter]
	public string? Title { get; set; }

	[Parameter]
	public string? Subtitle { get; set; }

	[Parameter]
	public string? PageTitle { get; set; }

	[Parameter]
	public bool Favoritable { get; set; } = true;

	[Parameter]
	public RenderFragment? ChildContent { get; set; }

	private bool favorited = false;

	protected override void OnInitialized() {

		favorited = UserService.Preferences.FavoriteModules?.Contains(Code) ?? false;

	}

	private async Task OnFavoriteToggleAsync(bool value) {

		if (value) {

			if ((UserService.Preferences.FavoriteModules?.Length ?? 0) < Preferences.FavoriteModulesMaxLength - 1) {

				await UserService.AddFavoriteModuleAsync(Code, true);
				favorited = true;

			} else {

				NotificationService.Notify(NotificationSeverity.Warning, AppTexts["0072"], AppTexts["0074"]);

			}

		} else {

			await UserService.RemoveFavoriteModuleAsync(Code, true);
			favorited = false;

		}

	}

}