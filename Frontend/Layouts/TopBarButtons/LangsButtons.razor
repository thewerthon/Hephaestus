@namespace Hephaestus.Frontend.Layouts.TopBarButtons
@inherits Microsoft.AspNetCore.Components.ComponentBase

<RadzenButton Variant="Variant.Text" Click=@(args => ShowContextMenu(args)) ContextMenu="@(args => None())" class="topbar-icon desktop-only" title="@AppText["0014"]">
	<LordIcon Icon="/lordicon/topbar/language.json" Anim="state" Trigger="click" State="hover-language" Size="24px" Target=".rz-button" Title="@AppText["0014"]" />
</RadzenButton>

@code {

	private void ShowContextMenu(MouseEventArgs args) => ContextMenuService.Open(args, ds =>
	@<RadzenMenu Click="ApplyLang">
		<RadzenMenuItem Image="images/langs/pt.svg" Text="Português (BR)" Value="0" class="lang-contextmenu"></RadzenMenuItem>
		<RadzenMenuItem Image="images/langs/en.svg" Text="English (USA)" Value="1" class="lang-contextmenu"></RadzenMenuItem>
		<RadzenMenuItem Image="images/langs/es.svg" Text="Español (ES)" Value="2" class="lang-contextmenu"></RadzenMenuItem>
	</RadzenMenu>);

	private void ApplyLang(MenuItemEventArgs args) {
		_ = args.Value switch {
			1 => SetLanguage("en"),
			2 => SetLanguage("es"),
			_ => SetLanguage("pt")
		}; ContextMenuService.Close();
	}

	private async Task SetLanguage(string lang) {

		var result = await DialogService.Confirm(AppText["0036"], AppText["0037"], new ConfirmOptions() {
				OkButtonText = AppButton["Confirm"],
				CancelButtonText = AppButton["Cancel"],
				AutoFocusFirstElement = false,
				CloseDialogOnOverlayClick = true,
				CloseDialogOnEsc = true
			});

		if (result ?? false) {

			await UserService.SetLanguageAsync(lang, true);
			NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);

		}

	}

	private void None() { }

}